{"ast":null,"code":"import { LoginAdmin, SignUpService, LogoutAdmin } from '../../../../services/Admin/AuthService';\nexport const signUpAction = credentials => {\n  console.log(credentials);\n  return dispatch => {\n    dispatch({\n      type: 'RESTART_AUTH_RESPONSE'\n    });\n    dispatch({\n      type: 'LOADING'\n    });\n    SignUpService(credentials).then(res => {\n      if (res.hasOwnProperty('success') && res.success == true) {\n        dispatch({\n          type: 'SIGNUP_SUCCESS',\n          res\n        });\n      } else if (res.hasOwnProperty('success') && res.success == false) {\n        dispatch({\n          type: 'SIGNUP_ERROR',\n          res\n        });\n      }\n    }, error => {\n      dispatch({\n        type: 'CODE_ERROR',\n        error\n      });\n    });\n  };\n};\nexport const AdminLoginAction = (credentials, props) => {\n  return dispatch => {\n    dispatch({\n      type: 'RESTART_AUTH_RESPONSE'\n    });\n    dispatch({\n      type: 'LOADING'\n    });\n    LoginAdmin(credentials).then(res => {\n      console.log(res.token);\n\n      if (res.success == true && res.hasOwnProperty('token')) {\n        console.log('ready to login user with ' + res.token);\n        console.log(res.token);\n        localStorage.setItem('admin-token', 'Bearer ' + res.token);\n        dispatch({\n          type: 'LOGIN_SUCCESS'\n        });\n        setTimeout(() => {\n          props.history.push(\"/admin\");\n          dispatch({\n            type: 'RESTART_AUTH_RESPONSE'\n          });\n        }, 1500);\n      } else if (res.success == false) {\n        dispatch({\n          type: 'LOGIN_ERROR',\n          res\n        });\n      }\n    }, error => {\n      dispatch({\n        type: 'CODE_ERROR',\n        error\n      });\n      console.log(error);\n    });\n  };\n};\nexport const AdminLogOutAction = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESTART_AUTH_RESPONSE'\n    });\n    LogoutAdmin().then(res => {\n      console.log(res);\n\n      if (res.success == true) {\n        dispatch({\n          type: 'LOGOUT_SUCCESS',\n          res\n        });\n      } else if (res.success == false) {\n        dispatch({\n          type: 'LOGOUT_ERROR',\n          res\n        });\n      }\n    }, error => {\n      dispatch({\n        type: 'CODE_ERROR',\n        error\n      });\n      console.log(error);\n    });\n  };\n};\nexport const clearAdminAuthState = () => {\n  return dispatch => {\n    dispatch({\n      type: 'RESTART_AUTH_RESPONSE'\n    });\n  };\n};","map":{"version":3,"sources":["/Users/yogeshpatel/Downloads/YOUTUBE-REACT-MULTIAUTH-master/src/store/actions/Admin/Auth/AuthActions.js"],"names":["LoginAdmin","SignUpService","LogoutAdmin","signUpAction","credentials","console","log","dispatch","type","then","res","hasOwnProperty","success","error","AdminLoginAction","props","token","localStorage","setItem","setTimeout","history","push","AdminLogOutAction","clearAdminAuthState"],"mappings":"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","sourcesContent":["import {LoginAdmin,SignUpService,LogoutAdmin} from '../../../../services/Admin/AuthService'\n\n\n\n\n\n\n\nexport const signUpAction = (credentials) =>{\n    console.log(credentials);\n    return (dispatch)=>{\n        \n        dispatch({type:'RESTART_AUTH_RESPONSE'});\n        dispatch({type:'LOADING'});\n\n        SignUpService(credentials).then((res)=>{\n            \n            if(res.hasOwnProperty('success') && res.success==true){\n\n                dispatch({type:'SIGNUP_SUCCESS',res});\n                \n            }else if(res.hasOwnProperty('success') && res.success==false) { \n                dispatch({type:'SIGNUP_ERROR',res})\n            }\n        },\n        error=>{\n            dispatch({type:'CODE_ERROR',error});\n        }\n        )\n    }\n    \n}\n\n\nexport const AdminLoginAction = (credentials,props) =>\n{\n    \n\n return (dispatch)=>{\n\n\n    dispatch({type:'RESTART_AUTH_RESPONSE'});\n    dispatch({type:'LOADING'});\n     LoginAdmin(credentials).then((res)=>{\n         console.log(res.token);\n        if(res.success==true && res.hasOwnProperty('token')){\n            console.log('ready to login user with '+res.token)\n            console.log(res.token);\n            localStorage.setItem('admin-token','Bearer '+res.token);\n            dispatch({type:'LOGIN_SUCCESS'});\n            setTimeout(() => {\n                props.history.push(\"/admin\");    \n                dispatch({type:'RESTART_AUTH_RESPONSE'}); \n            }, 1500);\n            \n        }else if(res.success==false){\n            dispatch({type:'LOGIN_ERROR',res})\n        }\n           \n    },\n    error=>{\n        dispatch({type:'CODE_ERROR',error});\n        console.log(error)\n    }\n    \n     )\n }   \n}\n\n\nexport const AdminLogOutAction = () =>\n{\n    \n\n return (dispatch)=>{\n\n\n    dispatch({type:'RESTART_AUTH_RESPONSE'});\n     LogoutAdmin().then((res)=>{\n         console.log(res);\n        if(res.success==true){\n            dispatch({type:'LOGOUT_SUCCESS',res});\n\n        }else if(res.success==false){\n            dispatch({type:'LOGOUT_ERROR',res})\n\n        }\n\n           \n    },\n    error=>{\n        dispatch({type:'CODE_ERROR',error});\n        console.log(error)\n    }\n    \n     )\n }   \n}\n\n\nexport const clearAdminAuthState = () =>\n{\n    return (dispatch) =>\n    {\n        dispatch({type:'RESTART_AUTH_RESPONSE'});\n    }\n  \n}\n\n\n"]},"metadata":{},"sourceType":"module"}