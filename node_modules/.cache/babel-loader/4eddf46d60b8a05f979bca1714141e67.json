{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ProfileView.js\";\nimport React, { useEffect } from 'react';\nimport { Card } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserAction } from '../../store/actions/User/ProfileActions';\nimport { loadConnectionsAction } from '../../store/actions/User/ProfileActions';\nimport { GetPossibleConnections } from '../../services/User/ProfileService';\nimport { useStyles } from '../../styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport HttpService from '../../services/HttpService';\nexport default function ProfileView() {\n  const dispatch = useDispatch();\n  const usersDispatch = useDispatch();\n  const classes = useStyles();\n  const userProfile = useSelector(state => state.userProfile.userProfile);\n  const allUsers = useSelector(state => state.possibleConnections.allUsers);\n  var deleteaftertest;\n  useEffect(() => {\n    dispatch(loadUserAction());\n  }, [dispatch]);\n  console.log(\"Hello below should be userProfile variable\");\n  console.log(JSON.stringify(userProfile));\n  useEffect(() => {\n    dispatch(loadConnectionsAction());\n  }, [usersDispatch]);\n  console.log(\"Hello below should be allUsers variable\");\n  console.log(JSON.stringify(allUsers));\n  const http = new HttpService();\n  let registered_users = \"user/get-registered-users\";\n  const tokenId = \"user-token\";\n  http.getData(registered_users, tokenId).then(idk => {\n    deleteaftertest = idk;\n    console.log(\"Hello below should be deleteaftertest variable inside\");\n    console.log(JSON.stringify(deleteaftertest));\n  });\n  console.log(\"Hello below should be deleteaftertest variable outside\");\n  console.log(JSON.stringify(deleteaftertest));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fullWidthProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, userProfile != \"\" && userProfile.success == true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 33\n    }\n  }, \"Name: \"), userProfile.user.name), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"Email: \"), userProfile.user.email), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 33\n    }\n  }, \"Account Creation Date: \"), userProfile.user.created_at)) : userProfile.success == false ? userProfile.message : /*#__PURE__*/React.createElement(Skeleton, {\n    variant: \"rect\",\n    width: 210,\n    height: 118,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ProfileView.js"],"names":["React","useEffect","Card","useDispatch","useSelector","loadUserAction","loadConnectionsAction","GetPossibleConnections","useStyles","Skeleton","HttpService","ProfileView","dispatch","usersDispatch","classes","userProfile","state","allUsers","possibleConnections","deleteaftertest","console","log","JSON","stringify","http","registered_users","tokenId","getData","then","idk","fullWidthProfile","success","user","name","email","created_at","message"],"mappings":"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","sourcesContent":["import React , {useEffect}  from 'react'\nimport {Card} from '@material-ui/core'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {loadUserAction} from '../../store/actions/User/ProfileActions'\nimport {loadConnectionsAction} from '../../store/actions/User/ProfileActions'\nimport {GetPossibleConnections} from '../../services/User/ProfileService'\nimport {useStyles} from '../../styles'\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport HttpService from '../../services/HttpService';\n\nexport default function ProfileView() {\n\n    const dispatch = useDispatch();\n    const usersDispatch = useDispatch();\n    const classes = useStyles();\n    const userProfile = useSelector(state => state.userProfile.userProfile);\n    const allUsers = useSelector(state => state.possibleConnections.allUsers)\n    var deleteaftertest;\n\n    useEffect(() => {\n        dispatch(loadUserAction());\n    }, [dispatch])\n\n    console.log(\"Hello below should be userProfile variable\")\n    console.log(JSON.stringify(userProfile))\n\n    useEffect(() => {\n        dispatch(loadConnectionsAction());\n    }, [usersDispatch])\n\n    console.log(\"Hello below should be allUsers variable\")\n    console.log(JSON.stringify(allUsers))\n\n    const http = new HttpService();\n    let registered_users = \"user/get-registered-users\";\n    const tokenId = \"user-token\";\n   \n    http.getData(registered_users,tokenId).then(idk=>{\n        deleteaftertest = idk;\n        console.log(\"Hello below should be deleteaftertest variable inside\")\n        console.log(JSON.stringify(deleteaftertest))\n    })\n\n    console.log(\"Hello below should be deleteaftertest variable outside\")\n    console.log(JSON.stringify(deleteaftertest))\n\n    return (\n        <>\n            <div className={classes.fullWidthProfile}>\n            <Card>\n                {\n                    userProfile!=\"\" && userProfile.success==true?\n                            <div>\n                            <h3><b>Name: </b>{userProfile.user.name}</h3>\n                            <h3><b>Email: </b>{userProfile.user.email}</h3>\n                            <h3><b>Account Creation Date: </b>{userProfile.user.created_at}</h3>\n                            </div>\n                    :\n                    userProfile.success==false ?\n                    userProfile.message\n                    :\n                    <Skeleton variant=\"rect\" width={210} height={118} />\n\n                }\n            </Card>\n            </div>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}