{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ProfileView.js\";\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Card } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserAction } from '../../store/actions/User/ProfileActions';\nimport { useStyles } from '../../styles';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ContactCard from './ContactCard';\nimport HttpService from '../../services/HttpService';\nexport default function ProfileView() {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const userProfile = useSelector(state => state.userProfile.userProfile);\n  useEffect(() => {\n    dispatch(loadUserAction());\n  }, [dispatch]);\n  const [contactList, updateContactList] = useState({\n    users: [],\n    success: false\n  });\n\n  function getAllUsers() {\n    const http = new HttpService();\n    let registered_users = \"user/get-registered-users\";\n    const tokenId = \"user-token\";\n    return http.getData(registered_users, tokenId).then(data => {\n      console.log(JSON.stringify(data));\n      updateContactList({\n        users: data.users,\n        success: true\n      });\n      return data;\n    }).catch(error => {\n      console.log(error);\n      return error;\n    });\n  }\n\n  let allUsers = getAllUsers();\n  console.log(\"AllUsersBelow\");\n  console.log(JSON.stringify(allUsers)); // let contacts = allUsers.users.map(item => <ContactCard user={item} />)\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fullWidthProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, userProfile != \"\" && userProfile.success == true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }, \"Name: \"), userProfile.user.name), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 33\n    }\n  }, \"Email: \"), userProfile.user.email), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }\n  }, \"Account Creation Date: \"), userProfile.user.created_at)) : userProfile.success == false ? userProfile.message : /*#__PURE__*/React.createElement(Skeleton, {\n    variant: \"rect\",\n    width: 210,\n    height: 118,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"Testing\")));\n}","map":{"version":3,"sources":["/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ProfileView.js"],"names":["React","useEffect","useState","Card","useDispatch","useSelector","loadUserAction","useStyles","Skeleton","ContactCard","HttpService","ProfileView","dispatch","classes","userProfile","state","contactList","updateContactList","users","success","getAllUsers","http","registered_users","tokenId","getData","then","data","console","log","JSON","stringify","catch","error","allUsers","fullWidthProfile","user","name","email","created_at","message"],"mappings":"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","sourcesContent":["import React , {useEffect}  from 'react'\nimport {useState} from 'react'\nimport {Card} from '@material-ui/core'\nimport {useDispatch,useSelector} from 'react-redux'\nimport {loadUserAction} from '../../store/actions/User/ProfileActions'\nimport {useStyles} from '../../styles'\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport ContactCard from './ContactCard'\nimport HttpService from '../../services/HttpService'\n\nexport default function ProfileView() {\n\n    const dispatch = useDispatch();\n    const classes = useStyles();\n    const userProfile = useSelector(state => state.userProfile.userProfile);\n\n    useEffect(() => {\n        dispatch(loadUserAction());\n    }, [dispatch])\n\n    const [contactList, updateContactList] = useState(\n        {\n            users:[],\n            success: false\n        }\n    )\n    \n    function getAllUsers(){\n        const http = new HttpService();\n        let registered_users = \"user/get-registered-users\";\n        const tokenId = \"user-token\";\n\n        return http.getData(registered_users,tokenId).then(data=>{\n            console.log(JSON.stringify(data));\n            updateContactList(\n                {\n                    users: data.users,\n                    success: true  \n                }\n            )\n            return data;\n        }).catch((error)=> {\n            console.log(error)\n            return error; \n            });\n    }\n\n    let allUsers = getAllUsers()\n    console.log(\"AllUsersBelow\")\n    console.log(JSON.stringify(allUsers))\n\n    // let contacts = allUsers.users.map(item => <ContactCard user={item} />)\n\n    return (\n        <>\n            <div className={classes.fullWidthProfile}>\n            <Card>\n                {\n                    userProfile!=\"\" && userProfile.success==true?\n                            <div>\n                            <h3><b>Name: </b>{userProfile.user.name}</h3>\n                            <h3><b>Email: </b>{userProfile.user.email}</h3>\n                            <h3><b>Account Creation Date: </b>{userProfile.user.created_at}</h3>\n                            </div>\n                    :\n                    userProfile.success==false ?\n                    userProfile.message\n                    :\n                    <Skeleton variant=\"rect\" width={210} height={118} />\n\n                }\n            </Card>\n            <br></br>\n            <Card>\n                Testing\n            </Card>\n            </div>\n        </>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}