{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ConnectionCard.js\";\nimport React from \"react\";\nimport { Card } from '@material-ui/core';\nimport HttpService from '../../services/HttpService';\nimport DateTimePicker from 'react-datetime-picker';\n\nfunction ConnectionCard(props) {\n  console.log(props);\n\n  function HandleCancel() {\n    console.log(props.connection.id);\n    const http = new HttpService();\n    let cancel_connection_url = \"user/cancel-connection/\".props.connection.id;\n    const tokenId = \"user-token\";\n    let body = {};\n    return http.postData(body, cancel_connection_url, tokenId).then(data => {\n      console.log(JSON.stringify(data));\n      props.updateConnection({\n        connections: data.result,\n        success: true\n      });\n      return data;\n    }).catch(error => {\n      console.log(error);\n      return error;\n    });\n  }\n\n  function Update_date_time() {}\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, console.log(props.connection), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, props.connection.id, props.connection.email === props.thisUser.user.email ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, props.connection.connection_email) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, props.connection.email), /*#__PURE__*/React.createElement(DateTimePicker, {\n    value: props.connection.scheduled_date_time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: HandleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Cancel Call\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: Update_date_time,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default ConnectionCard;","map":{"version":3,"sources":["/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ConnectionCard.js"],"names":["React","Card","HttpService","DateTimePicker","ConnectionCard","props","console","log","HandleCancel","connection","id","http","cancel_connection_url","tokenId","body","postData","then","data","JSON","stringify","updateConnection","connections","result","success","catch","error","Update_date_time","email","thisUser","user","connection_email","scheduled_date_time"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEA,WAASG,YAAT,GAAuB;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,UAAN,CAAiBC,EAA7B;AACA,UAAMC,IAAI,GAAG,IAAIT,WAAJ,EAAb;AACA,QAAIU,qBAAqB,GAAG,0BAA0BP,KAA1B,CAAgCI,UAAhC,CAA2CC,EAAvE;AACA,UAAMG,OAAO,GAAG,YAAhB;AACA,QAAIC,IAAI,GAAG,EAAX;AAEA,WAAOH,IAAI,CAACI,QAAL,CAAcD,IAAd,EAAoBF,qBAApB,EAA0CC,OAA1C,EAAmDG,IAAnD,CAAwDC,IAAI,IAAE;AACjEX,MAAAA,OAAO,CAACC,GAAR,CAAYW,IAAI,CAACC,SAAL,CAAeF,IAAf,CAAZ;AACAZ,MAAAA,KAAK,CAACe,gBAAN,CACI;AACIC,QAAAA,WAAW,EAAEJ,IAAI,CAACK,MADtB;AAEIC,QAAAA,OAAO,EAAE;AAFb,OADJ;AAMA,aAAON,IAAP;AACH,KATM,EASJO,KATI,CASGC,KAAD,IAAU;AACfnB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,KAAZ;AACA,aAAOA,KAAP;AACC,KAZE,CAAP;AAaH;;AAED,WAASC,gBAAT,GAA2B,CAE1B;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCpB,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACI,UAAlB,CADD,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACI,UAAN,CAAiBC,EADtB,EAGIL,KAAK,CAACI,UAAN,CAAiBkB,KAAjB,KAA2BtB,KAAK,CAACuB,QAAN,CAAeC,IAAf,CAAoBF,KAA/C,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMtB,KAAK,CAACI,UAAN,CAAiBqB,gBAAvB,CADJ,gBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMzB,KAAK,CAACI,UAAN,CAAiBkB,KAAvB,CANR,eASI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAItB,KAAK,CAACI,UAAN,CAAiBsB,mBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,eAWI;AAAQ,IAAA,OAAO,EAAIvB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXJ,eAYI;AAAQ,IAAA,OAAO,EAAIkB,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,CADJ,CAHA,eAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBA,CADJ;AAuBH;;AAED,eAAetB,cAAf","sourcesContent":["import React from \"react\"\nimport {Card} from '@material-ui/core'\nimport HttpService from '../../services/HttpService'\nimport DateTimePicker from 'react-datetime-picker'\n\nfunction ConnectionCard(props){\n    console.log(props)\n\n    function HandleCancel(){\n        console.log(props.connection.id)\n        const http = new HttpService();\n        let cancel_connection_url = \"user/cancel-connection/\".props.connection.id\n        const tokenId = \"user-token\"\n        let body = {}\n\n        return http.postData(body ,cancel_connection_url,tokenId).then(data=>{\n            console.log(JSON.stringify(data));\n            props.updateConnection(\n                {\n                    connections: data.result,\n                    success: true\n                }\n            )\n            return data;\n        }).catch((error)=> {\n            console.log(error)\n            return error; \n            });\n    }\n\n    function Update_date_time(){\n\n    }\n\n\n    return (\n        <div>\n        {console.log(props.connection)}\n        <br></br>\n        <Card>\n            <div >\n                {props.connection.id}\n                {\n                props.connection.email === props.thisUser.user.email ? \n                    <div>{props.connection.connection_email}</div> \n                    : \n                    <div>{props.connection.email}</div>  \n                }\n\n                <DateTimePicker value = {props.connection.scheduled_date_time}/>\n\n                <button onClick = {HandleCancel}>Cancel Call</button>\n                <button onClick = {Update_date_time}>Update</button>\n            </div>\n        </Card>\n        <br></br>\n        </div>\n    )\n}\n\nexport default ConnectionCard"]},"metadata":{},"sourceType":"module"}