{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ConnectionDeck.js\";\nimport ConnectionCard from './ConnectionCard';\nimport HttpService from '../../services/HttpService';\nimport React, { useState, useEffect } from \"react\";\n\nfunction ConnectionDeck(props) {\n  let firstRender = true;\n  let getAllConnections = props.updateConnections;\n  let connectionList = props.connectionsList;\n  useEffect(() => {\n    getAllConnections();\n  }, [connectionList]);\n  let connectionCardList = connectionList.connections.map(item => /*#__PURE__*/React.createElement(ConnectionCard, {\n    key: item.id,\n    connection: item,\n    thisUser: props.userProf,\n    updateConnection: props.updateConnectionList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 69\n    }\n  }));\n\n  if (firstRender === true) {\n    getAllConnections();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, connectionList.success ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }\n  }, connectionCardList) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Loading...\")));\n}\n\nexport default ConnectionDeck;","map":{"version":3,"sources":["/Users/yogeshpatel/Developer/call-scheduler-react/src/views/User/ConnectionDeck.js"],"names":["ConnectionCard","HttpService","React","useState","useEffect","ConnectionDeck","props","firstRender","getAllConnections","updateConnections","connectionList","connectionsList","connectionCardList","connections","map","item","id","userProf","updateConnectionList","success"],"mappings":";AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAE1B,MAAIC,WAAW,GAAG,IAAlB;AAEA,MAAIC,iBAAiB,GAAGF,KAAK,CAACG,iBAA9B;AACA,MAAIC,cAAc,GAAGJ,KAAK,CAACK,eAA3B;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,iBAAiB;AACpB,GAFQ,EAEN,CAACE,cAAD,CAFM,CAAT;AAIA,MAAIE,kBAAkB,GAAGF,cAAc,CAACG,WAAf,CAA2BC,GAA3B,CAA+BC,IAAI,iBAAI,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAIA,IAAI,CAACC,EAA5B;AAAgC,IAAA,UAAU,EAAID,IAA9C;AAAoD,IAAA,QAAQ,EAAIT,KAAK,CAACW,QAAtE;AAAgF,IAAA,gBAAgB,EAAIX,KAAK,CAACY,oBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvC,CAAzB;;AACA,MAAIX,WAAW,KAAK,IAApB,EAAyB;AACrBC,IAAAA,iBAAiB;AACpB;;AAED,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQE,cAAc,CAACS,OAAf,gBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCP,kBADD,CADJ,gBAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CAPZ,CADJ;AAcH;;AAED,eAAeP,cAAf","sourcesContent":["import ConnectionCard from './ConnectionCard'\nimport HttpService from '../../services/HttpService'\nimport React,{useState, useEffect} from \"react\"\n\nfunction ConnectionDeck(props){\n\n    let firstRender = true\n\n    let getAllConnections = props.updateConnections\n    let connectionList = props.connectionsList\n\n\n\n    useEffect(() => {\n        getAllConnections();\n    }, [connectionList])\n\n    let connectionCardList = connectionList.connections.map(item => <ConnectionCard key = {item.id} connection = {item} thisUser = {props.userProf} updateConnection = {props.updateConnectionList}/>)\n    if (firstRender === true){\n        getAllConnections()\n    }\n\n    return (\n        <div>\n            {\n                connectionList.success?\n                    <div>\n                    {connectionCardList}\n                    </div>\n                :\n                    <div>\n                    <h1>Loading...</h1>\n                    </div>\n            }\n        </div>\n    )\n}\n\nexport default ConnectionDeck"]},"metadata":{},"sourceType":"module"}