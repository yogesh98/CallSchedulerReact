{"ast":null,"code":"class HttpService {\n  constructor() {\n    this.url = \"http://localhost:8000\";\n\n    this.postData = async (item, added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.postRequestOptions(token, item);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getData = async (added_url, tokenId = \"\") => {\n      const token = await localStorage.getItem(tokenId);\n      const requestOptions = this.getRequestOptions(token);\n      return fetch(this.url + \"/\" + added_url, requestOptions).then(response => response.json());\n    };\n\n    this.getRequestOptions = token => {\n      let requestOptions = {\n        method: 'GET',\n        headers: {\n          'Authorization': token,\n          'Content-type': 'application/json'\n        }\n      };\n      return requestOptions;\n    };\n\n    this.postRequestOptions = (token, item) => {\n      let requestOptions = {\n        method: 'POST',\n        headers: {\n          'Authorization': token,\n          'Content-type': 'Application/json'\n        },\n        body: JSON.stringify(item)\n      };\n      return requestOptions;\n    };\n  }\n\n}\n\nexport default HttpService;","map":{"version":3,"sources":["/Users/yogeshpatel/Developer/call-scheduler-react/src/services/HttpService.js"],"names":["HttpService","url","postData","item","added_url","tokenId","token","localStorage","getItem","requestOptions","postRequestOptions","fetch","then","response","json","getData","getRequestOptions","method","headers","body","JSON","stringify"],"mappings":"AAAA,MAAMA,WAAN,CACC;AAAA;AAAA,SACGC,GADH,GACS,uBADT;;AAAA,SAIGC,QAJH,GAIc,OAAMC,IAAN,EAAYC,SAAZ,EAAsBC,OAAO,GAAC,EAA9B,KAAoC;AAC/C,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AAEA,YAAMI,cAAc,GAAG,KAAKC,kBAAL,CAAwBJ,KAAxB,EAA8BH,IAA9B,CAAvB;AAEA,aAAOQ,KAAK,CAAC,KAAKV,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAyBK,cAAzB,CAAL,CAA8CG,IAA9C,CACHC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADP,CAAP;AAEC,KAXJ;;AAAA,SAcGC,OAdH,GAca,OAAMX,SAAN,EAAgBC,OAAO,GAAC,EAAxB,KACV;AACI,YAAMC,KAAK,GAAG,MAAMC,YAAY,CAACC,OAAb,CAAqBH,OAArB,CAApB;AACA,YAAMI,cAAc,GAAG,KAAKO,iBAAL,CAAuBV,KAAvB,CAAvB;AAEA,aAAOK,KAAK,CAAC,KAAKV,GAAL,GAAS,GAAT,GAAaG,SAAd,EAAyBK,cAAzB,CAAL,CAA8CG,IAA9C,CACHC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EADP,CAAP;AAEH,KArBJ;;AAAA,SAwBGE,iBAxBH,GAwBwBV,KAAD,IACpB;AACI,UAAIG,cAAc,GAAG;AACjBQ,QAAAA,MAAM,EAAC,KADU;AAEjBC,QAAAA,OAAO,EAAC;AACJ,2BAAgBZ,KADZ;AAEP,0BAAe;AAFR;AAFS,OAArB;AAQA,aAAOG,cAAP;AACH,KAnCJ;;AAAA,SAsCGC,kBAtCH,GAsCwB,CAACJ,KAAD,EAAOH,IAAP,KACrB;AACI,UAAIM,cAAc,GAAG;AACjBQ,QAAAA,MAAM,EAAC,MADU;AAEjBC,QAAAA,OAAO,EAAC;AAAC,2BAAgBZ,KAAjB;AACP,0BAAe;AADR,SAFS;AAMrBa,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAelB,IAAf;AANgB,OAArB;AAUA,aAAOM,cAAP;AACH,KAnDJ;AAAA;;AAAA;;AA4DG,eAAeT,WAAf","sourcesContent":["class HttpService\n {\n    url = \"http://localhost:8000\";\n\n\n    postData = async(item ,added_url,tokenId=\"\") =>{\n    const token = await localStorage.getItem(tokenId);\n\n    const requestOptions = this.postRequestOptions(token,item);\n\n    return fetch(this.url+\"/\"+added_url, requestOptions).then(\n        response=>response.json());\n    }\n\n\n    getData = async(added_url,tokenId=\"\") =>\n    {\n        const token = await localStorage.getItem(tokenId);\n        const requestOptions = this.getRequestOptions(token);\n\n        return fetch(this.url+\"/\"+added_url, requestOptions).then(\n            response=>response.json());\n    }\n\n\n    getRequestOptions = (token) =>\n    {\n        let requestOptions = {\n            method:'GET',\n            headers:{\n                'Authorization':token,\n             'Content-type':'application/json',\n        }\n        }\n\n        return requestOptions;\n    }\n\n\n    postRequestOptions = (token,item) =>\n    {\n        let requestOptions = {\n            method:'POST',\n            headers:{'Authorization':token,\n             'Content-type':'Application/json',\n        },\n\n        body:JSON.stringify(item)\n\n        }\n\n        return requestOptions;\n    }\n\n\n\n\n\n    }\n\n\n    export default HttpService;\n"]},"metadata":{},"sourceType":"module"}